{
    "type": "Ext.data.Model",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "PERule"
    },
    "designerId": "6aeb0b2d-c6b5-4a60-a3bf-4b498f46e72d",
    "cn": [
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "id"
            },
            "designerId": "26c2b2a7-9553-4fd7-98d8-76105855a51b"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "fromDay"
            },
            "designerId": "504d681f-497a-46e1-978a-f03ee1bb54ba"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "toDay"
            },
            "designerId": "fd6947a9-842d-4aee-b740-e2160e1dafc2"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "cost"
            },
            "designerId": "e2399d17-f13d-4156-97f5-1823b7ff32ad"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "fromTime"
            },
            "designerId": "3186988b-038b-46b9-ba47-0358a414fedc"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "toTime"
            },
            "designerId": "db0fc1d1-87fb-4e5f-aa15-394b8aed041b"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "timeLimit"
            },
            "designerId": "c16c6f12-458d-4a1c-b663-10692e3beba1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "canBeAppliedCurrently",
                "designer|params": [
                    "reportObject"
                ],
                "implHandler": [
                    "var result = false;",
                    "var peRuleStartTime = this.getFromTime();",
                    "var peRuleEndTime = this.getToTime();  ",
                    "var reportStartTime = reportObject.getStartTime();",
                    "var reportMinEndTime = reportObject.getMinEndTime();",
                    "var validTimes = (peRuleStartTime && peRuleEndTime && reportStartTime);",
                    "",
                    "var validDay = this.validDay(reportObject.get('dayOfWeek'));",
                    "",
                    "//All Times",
                    "/*",
                    "if(reportMinEndTime === 0 && validDay){",
                    "this.set('appliedCurrently',true);",
                    "return true;   ",
                    "}",
                    "*/",
                    "",
                    "if(validTimes && validDay){",
                    "    if((reportStartTime >= peRuleStartTime) && (reportStartTime < peRuleEndTime)){",
                    "        //alert('PE Rule can be applied');",
                    "        this.set('appliedCurrently',true);",
                    "        return true;   ",
                    "    }",
                    "}    ",
                    "",
                    "",
                    "",
                    "return result;"
                ]
            },
            "designerId": "5272fb41-5b53-4842-b9db-0b7816a984c5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "canBeAppliedInTheFuture",
                "designer|params": [
                    "reportObject"
                ],
                "implHandler": [
                    "var result = false;",
                    "var peRuleStartTime = this.getFromTime();",
                    "var reportStartTime = reportObject.getStartTime();",
                    "var reportMinEndTime = reportObject.getMinEndTime();",
                    "var validTimes = (peRuleStartTime && reportStartTime && reportMinEndTime);",
                    "",
                    "var validDay = this.validDay(reportObject.get('dayOfWeek'));",
                    "",
                    "",
                    "if((reportMinEndTime === 0)&& validDay){",
                    "    this.set('appliedFuture',true);",
                    "    return true;   ",
                    "}",
                    "",
                    "",
                    "if(validTimes && validDay){",
                    "    if((peRuleStartTime>reportStartTime) && (reportMinEndTime>peRuleStartTime)){",
                    "        this.set('appliedFuture', true);",
                    "        return true;   ",
                    "    }",
                    "}",
                    "",
                    "return result;"
                ]
            },
            "designerId": "e6a549a3-bdba-4be6-92d5-5d3799f45fc1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "parseTime",
                "designer|params": [
                    "timeString"
                ],
                "implHandler": [
                    "var timeRegex = /(\\d\\d?):(\\d\\d)/;",
                    "var today = new Date();  ",
                    "var match = timeRegex.exec(timeString);",
                    "if(!match) return null;",
                    "var hours = match[1]-0; ",
                    "var minutes =  match[2]-0;",
                    "return new Date(today.getFullYear(), today.getMonth(),today.getDate(),hours,minutes); ",
                    ""
                ]
            },
            "designerId": "ecc0b820-00f7-4fd2-8867-98afc9a678e5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getToTime",
                "implHandler": [
                    "var toTime = this.parseTime(this.get('toTime'));",
                    "var peRep = MyApp.app.getController('MainViewController').config.globalPeReport;",
                    "",
                    "",
                    "/*",
                    "",
                    "Note changing the date(dayOfMonth,Month and Year) of FROM and TO times for rules are required ",
                    "because of this.canBeAppliedCurrently/Future:",
                    "",
                    "(reportStartTime >= peRuleStartTime) && (reportStartTime < peRuleEndTime))",
                    "",
                    "The above will return false if say today is Sunday 10th Nov, we wanted to see if the Rule canBeApplied on the Sunday 17th Nov",
                    "Since peRuleStartTime will have the peRuleStartTime && peRuleEndTime as Sunday 10th 2013, XX:XX; While reportStartTime will be Sunday 17th 2013, XX:XX",
                    "",
                    "The if statement below converts it such that peRuleStartTime will now be the same date at the Report: Sunday 17th 2013, XX:XX",
                    "",
                    "*/",
                    "",
                    "if(peRep){",
                    "    var reportStartTimeDateObject = peRep.getStartTime();",
                    "    var dayOfMonth = reportStartTimeDateObject.getDate();",
                    "    var month = reportStartTimeDateObject.getMonth();",
                    "    var year = reportStartTimeDateObject.getFullYear();",
                    "    ",
                    "    toTime.setMonth(month);",
                    "    toTime.setDate(dayOfMonth);",
                    "    toTime.setFullYear(year);    ",
                    "}",
                    "",
                    "",
                    "return toTime;",
                    ""
                ]
            },
            "designerId": "e7724256-8c76-4157-b6ca-f88bb27ab2b9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getFromTime",
                "implHandler": [
                    "var fromTime = this.parseTime(this.get('fromTime'));",
                    "var peRep = MyApp.app.getController('MainViewController').config.globalPeReport;",
                    "",
                    "",
                    "",
                    "/*",
                    "",
                    "Note changing the date(dayOfMonth,Month and Year) of FROM and TO times for rules are required ",
                    "because of this.canBeAppliedCurrently/Future:",
                    "",
                    "(reportStartTime >= peRuleStartTime) && (reportStartTime < peRuleEndTime))",
                    "",
                    "The above will return false if say today is Sunday 10th Nov, we wanted to see if the Rule canBeApplied on the Sunday 17th Nov",
                    "Since peRuleStartTime will have the peRuleStartTime && peRuleEndTime as Sunday 10th 2013, XX:XX; While reportStartTime will be Sunday 17th 2013, XX:XX",
                    "",
                    "The if statement below converts it such that peRuleStartTime will now be the same date at the Report: Sunday 17th 2013, XX:XX",
                    "",
                    "*/",
                    "",
                    "if(peRep){",
                    "    var reportStartTimeDateObject = peRep.getStartTime();",
                    "    var dayOfMonth = reportStartTimeDateObject.getDate();",
                    "    var month = reportStartTimeDateObject.getMonth();",
                    "    var year = reportStartTimeDateObject.getFullYear();",
                    "    ",
                    "    fromTime.setMonth(month);",
                    "    fromTime.setDate(dayOfMonth);",
                    "    fromTime.setFullYear(year);    ",
                    "}",
                    "",
                    "",
                    "return fromTime;",
                    ""
                ]
            },
            "designerId": "7b9ab3f3-2f8f-429b-9c8a-7f9551f8c87a"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "appliedCurrently"
            },
            "designerId": "8ce840a3-c239-4d2e-834a-e07fab690ecc"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "appliedFuture"
            },
            "designerId": "8ff0160a-6a60-4a5e-a639-7e8bae15f161"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getFormattedTimeString",
                "designer|params": [
                    "toTimeString"
                ],
                "implHandler": [
                    "var timeStringArray = toTimeString.split(\":\");",
                    "var timeFormatted = timeStringArray[0] + \":\" + timeStringArray[1];",
                    "return timeFormatted;"
                ]
            },
            "designerId": "a978fa3e-e49b-40c4-8fac-1ea963ee475c"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "fromTimeHour",
                "type": "int"
            },
            "designerId": "066b3b63-7c60-4466-bdcc-8104329b7c66",
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "convert",
                        "designer|params": [
                            "v",
                            "rec"
                        ],
                        "implHandler": [
                            "return rec.get('fromTime').split(':')[0] - 0;",
                            ""
                        ]
                    },
                    "designerId": "90b26ef3-2b22-4f0a-8e69-95a7ad1a8e7c"
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validDay",
                "designer|params": [
                    "peReportDayAsInt"
                ],
                "implHandler": [
                    "var validDay = false;",
                    "",
                    "var peFromDayAsInt =  MyApp.app.getController('MainViewController').convertDayStringToInt(this.get('fromDay'));",
                    "var peToDayAsInt =  MyApp.app.getController('MainViewController').convertDayStringToInt(this.get('toDay'));",
                    "",
                    "//This just makes it easier to evaluate if valid day ",
                    "if(peReportDayAsInt===0){",
                    "    peReportDayAsInt = 7;",
                    "} ",
                    "",
                    "if (peFromDayAsInt===0){",
                    "    peFromDayAsInt = 7;",
                    "} ",
                    "",
                    "if (peToDayAsInt===0){",
                    "    peToDayAsInt = 7;",
                    "}",
                    "",
                    "if(peReportDayAsInt>=peFromDayAsInt && peReportDayAsInt<=peToDayAsInt){",
                    "    validDay = true;",
                    "}",
                    "",
                    "//SpecialCase for SUNDAY: Since rules will generally be written Mon-Sunday or Sat-Sunday",
                    "//if(peReportDayAsInt===0 &&(peReportDayAsInt===peToDayAsInt)){",
                    "//    validDay = true;",
                    "//}",
                    "",
                    "return validDay;"
                ]
            },
            "designerId": "38c98eee-983d-4fcd-bf58-65cb77758101"
        },
        {
            "type": "Ext.data.Field",
            "reference": {
                "name": "fields",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "name": "parkSpaceType"
            },
            "designerId": "c828c40b-eaaa-4176-b752-d09f406fe223"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getParkSpaceType",
                "implHandler": [
                    "return this.get('parkSpaceType');"
                ]
            },
            "designerId": "d2d4d800-b3d2-47bd-a690-edb5bd47bcf5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getAppliedCurrently",
                "implHandler": [
                    "return this.get('appliedCurrently');"
                ]
            },
            "designerId": "971219c7-7ba1-4e8b-a9bd-ab34d0eda79f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getAppliedFuture",
                "implHandler": [
                    "return this.get('appliedFuture');"
                ]
            },
            "designerId": "9bdcf2ec-bff2-4e6f-afe4-f48942f806ee"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getName",
                "implHandler": [
                    "var fromTime = this.getFromTime().toTimeString();",
                    "var toTime = this.getToTime().toTimeString();",
                    "var name = this.getFormattedTimeString(fromTime) + '-' + this.getFormattedTimeString(toTime);",
                    "return name;"
                ]
            },
            "designerId": "52364f4d-9912-42a0-a1a3-3d982558b8bb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "reInitRule",
                "implHandler": [
                    "this.set('appliedCurrently',false);",
                    "this.set('appliedFuture',false);"
                ]
            },
            "designerId": "2d63aeef-4489-4ecc-a35b-8e5dbf0568a8"
        }
    ]
}